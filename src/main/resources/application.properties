spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
server.servlet.context-path=/dr

#server.port=80
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always

spring.datasource.url = jdbc:mysql://localhost:3306/dr?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.jdbc-url=jdbc:mysql://localhost:3306/dr?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = admin
app.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#spring.datasource.url=jdbc:oracle:thin:@//10.10.5.35:2018/vas
#spring.datasource.username = admin
#spring.datasource.password = admin
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle12cDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle10gDialect
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver



# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.resources.add-mappings=true

spring.resources.static-locations=classpath:/resources

#BANNER PROPERTIES
spring.banner.image.location=classpath:banner.txt
#spring.banner.image.width=  80%
#spring.banner.image.height= //TODO
#spring.banner.image.margin= //TODO
#spring.banner.image.invert= //TODO



# GSON (GsonProperties)

# Format to use when serializing Date objects.
spring.gson.date-format=dd-MM-yyy HH:mm:ss

# Whether to disable the escaping of HTML characters such as '<', '>', etc.
spring.gson.disable-html-escaping=false

# Whether to exclude inner classes during serialization.
spring.gson.disable-inner-class-serialization=true

# Whether to enable serialization of complex map keys (i.e. non-primitives).
spring.gson.enable-complex-map-key-serialization=true

# Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.
spring.gson.exclude-fields-without-expose-annotation=false

# Naming policy that should be applied to an object's field during serialization and deserialization.
spring.gson.field-naming-policy=

# Whether to generate non executable JSON by prefixing the output with some special text.
spring.gson.generate-non-executable-json=false

# Whether to be lenient about parsing JSON that doesn't conform to RFC 4627.
spring.gson.lenient=true

# Serialization policy for Long and long types.
#spring.gson.long-serialization-policy=

# Whether to output serialized JSON that fits in a page for pretty printing.
spring.gson.pretty-printing=true

# Whether to serialize null fields.
spring.gson.serialize-nulls=true
